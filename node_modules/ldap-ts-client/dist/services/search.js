"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.search = void 0;
async function search({ client, base, options, controls, }) {
    var _a;
    /** default time limit for query 10 min
     * if not provided it in options, will use default
     */
    const timeLimit = (_a = options === null || options === void 0 ? void 0 : options.timeLimit) !== null && _a !== void 0 ? _a : 6000;
    return new Promise((resolve, reject) => {
        if (controls) {
            client.search(base, Object.assign(Object.assign({}, options), { timeLimit }), controls, function searchCallBack(err, res) {
                if (err) {
                    reject(err);
                }
                res.on("error", function errorHandler(err) {
                    reject(err);
                });
                const data = [];
                res.on("searchEntry", function searchEntry(entry) {
                    data.push(entry);
                });
                res.on("end", function searchEnd(res) {
                    if ((res === null || res === void 0 ? void 0 : res.status) !== 0) {
                        reject(res);
                    }
                    resolve(data);
                });
            });
        }
        else {
            client.search(base, Object.assign(Object.assign({}, options), { timeLimit }), function searchCallBack(err, res) {
                if (err) {
                    reject(err);
                }
                res.on("error", function errorHandler(err) {
                    reject(err);
                });
                const data = [];
                res.on("searchEntry", function searchEntry(entry) {
                    data.push(entry);
                });
                res.on("end", function searchEnd(res) {
                    if ((res === null || res === void 0 ? void 0 : res.status) !== 0) {
                        reject(res);
                    }
                    resolve(data);
                });
            });
        }
    });
}
exports.search = search;
//# sourceMappingURL=search.js.map